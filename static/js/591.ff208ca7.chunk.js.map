{"version":3,"file":"static/js/591.ff208ca7.chunk.js","mappings":"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","sources":["helpers/hooks/useForm.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","redux/filters/selectors.js","components/Filter/Filter.jsx","components/ContactsList/Contacts.styled.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.jsx","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n    const [state, setState] = useState({ ...initialState });\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        const newValue = value;\n        setState(prevState => ({\n            ...prevState,\n            [name]:newValue\n        }))\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit({ ...state });\n        setState({...initialState})\n    }\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;","const { default: styled } = require('styled-components');\n\nexport const Container = styled.div`\n  max-width: 450px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  padding: 15px;\n  background: #555555;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nexport const Header = styled.h1`\n  margin-top: 0;\n  color: #fff;\n`;\nexport const FormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const LabelContainer = styled.label`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 15px;\n  color: #fff;\n`;\nexport const UserInput = styled.input`\n        width: 100%;\n        height: 40px;\n        margin-top:10px;\n        padding: 14px 0px 14px 5px;\n        font-size: 18px;\n        border: 1px solid rgba(33, 33, 33, 0.2);\n        border-radius: 4px;\n        outline: none;\n        transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        &:hover,\n        &:focus {\n            border-color: #ff6c00;\n        \n`;\n\nexport const StyledBtn = styled.button`\n  min-width: 160px;\n  max-height: 40px;\n  border: 1px solid #ff6c00;\n  border-radius: 25px;\n  padding: 12px 20px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.09em;\n  color: #fff;\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #000;\n    background-color: #ff6c00;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {Container, Header,FormContainer, LabelContainer, UserInput, StyledBtn } from './Form.styled';\nimport useForm from '../../helpers/hooks/useForm';\n\n\nconst Form = ({ onSubmit }) => {\n    \n     const initialState = {\n        name: '',\n        number:''\n    }\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit})\n    const {  name, number } = state;\n\n        return (\n            <>\n            <Container>\n                <Header>Phonebook</Header>\n                <FormContainer onSubmit={handleSubmit}>\n                    <LabelContainer >\n                        Name\n                        <UserInput\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                            value={name}\n                            onChange={handleChange} />\n                    </LabelContainer>\n\n                    <LabelContainer >\n                        Phone Number\n                        <UserInput\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n                            title=\"Tel may contain only numbers. For example 654-59-78\"\n                            required\n                            value={number}\n                            onChange={handleChange} />\n                        </LabelContainer>\n                        <StyledBtn type='submit'>Add contact</StyledBtn>\n                        </FormContainer>\n                    </Container>\n                </>\n        )\n}\n    \n    Form.propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\nexport default Form;","    export const getFiltredList = ({contacts:{items:contacts}, filter}) => {\n        if (filter) {\n        const subString = filter.toLocaleUpperCase();\n        const key = isNaN(+filter.charAt(0)) ? 'name' : 'number';\n        return contacts.filter(el => el[key].toLocaleUpperCase().includes(subString));\n        } else {\n        return contacts;\n        }\n}\n    \nexport const getFilter = ({ filter }) => filter;\n\n// :{items:contacts}","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filters/reducer-filter';\nimport { getFilter } from '../../redux/filters/selectors';\nimport {Container, Header, LabelContainer, UserInput } from '../Form/Form.styled'\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    const onFilterChange = (event ) => {\n        const { value } = event.currentTarget;\n        dispatch(setFilter(value));\n    }\n        return (\n            <>\n                <Container>\n                <Header>Contacts</Header>\n                <LabelContainer>Find contacts by Name\n            \n                <UserInput\n                    type=\"text\"\n                    name=\"filter\"\n                    placeholder='Enter name'\n                    value={filter}\n                    onChange={onFilterChange} />\n                </LabelContainer>\n                    </Container>\n            </>\n        )\n}\n\n    \nexport default Filter;","const { default: styled } = require('styled-components');\n\nexport const StyledItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  color: #fff;\n  margin-right:0 !important;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledName = styled.span`\n  width: 100px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.15;\n  letter-spacing: 0.05em;\n  color: #fff;\n`;\nexport const StyledNumber = styled.span`\n  margin-right: 50px;\n  margin-left: 10px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.15;\n  letter-spacing: 0.05em;\n  color: #fff;\n`;\nexport const StyledBtn = styled.button`\n  min-width: 60px;\n  max-height: 30px;\n  border: 1px solid #ff6c00;\n  border-radius: 25px;\n  padding: 6px 10px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.09em;\n  color: #fff;\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-transform: uppercase;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #000;\n    background-color: #ff6c00;\n  }\n`;\n","export const getContacts = (state) => {\n    return state.contacts.items;\n}\n\nexport const getLoader = (state) => {\n    return state.contacts.loader;\n}","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredList } from '../../redux/filters/selectors';\nimport { Container } from '../Form/Form.styled';\nimport { StyledItem, StyledName, StyledNumber, StyledBtn } from './Contacts.styled';\nimport { removeContact } from '../../redux/contacts/contacts-slice';\nimport { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { fetchContacts } from '../../redux/contacts/conatcts-operations';\nimport Loader from 'components/Loader';\nimport { useEffect } from 'react';\nimport { getLoader } from '../../redux/contacts/contacts-selectors';\n\nconst ContactsList = () => {\n    const contacts = useSelector(getFiltredList);\n    const loader = useSelector(getLoader);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const onRemoveContact = useCallback((id) => {\n        dispatch(removeContact(id));\n    }, [dispatch])\n    return (\n            <Container>\n            <List>\n                {loader && <Loader/>}\n             {contacts.length ? contacts.map((el) => (\n                 <StyledItem key={el.id}>\n                     <StyledName>{el.name}</StyledName>:    \n                     <StyledNumber>{el.number}</StyledNumber>\n                     <StyledBtn onClick={()=> onRemoveContact(el.id)}>Delete contact</StyledBtn>\n                     </StyledItem>)) : <StyledName>Your phonebook is empty</StyledName>}\n                </List>\n            </Container>\n    )\n}\nconst List = styled.div`\n         padding:0;\n`\nexport default ContactsList;","import Form from '../../components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactsList/ContactsList';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/conatcts-operations';\nconst PhoneBook = () => {\n const dispatch = useDispatch();\n\n    const onAddContact = (data) => {\n        dispatch(addContact(data))\n    }\n        return (\n          <Container>\n            <Form  onSubmit={ onAddContact} />\n            <Filter />\n            <ContactsList  />\n      </Container>\n    );\n};\n\n\nconst Container = styled.div`\n          height: 100vh;\n          color: #010101;\n          text-align:center;\n`\n\nexport default PhoneBook;"],"names":["initialState","onSubmit","useState","state","setState","handleChange","target","name","newValue","value","prevState","handleSubmit","event","preventDefault","styled","require","default","Container","div","Header","h1","FormContainer","form","LabelContainer","label","UserInput","input","StyledBtn","button","useForm","number","type","pattern","title","required","onChange","getFiltredList","contacts","items","filter","subString","toLocaleUpperCase","key","isNaN","charAt","el","includes","getFilter","useSelector","dispatch","useDispatch","placeholder","currentTarget","setFilter","StyledItem","li","StyledName","span","StyledNumber","getLoader","loader","List","useEffect","fetchContacts","onRemoveContact","useCallback","id","removeContact","Loader","length","map","onClick","data","addContact"],"sourceRoot":""}